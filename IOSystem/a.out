1: package com.learn.iosystem.readfile;
2: 
3: import java.io.*;
4: 
5: /**
6:  * Created by hechao on 2017/4/18.
7:  */
8: public class ReadInputFile {
9:     public static String filepath = "/Users/hechao/Documents/Learn/IOSystem/src/main/java/com/learn/iosystem/readfile/ReadInputFile.java";
10:     public static void operation() throws IOException {
11: //        System.out.println(bufferedInputRead(filepath));
12: //        memoryInputRead();
13: //        formattedMemoryInputRead();
14:         BasicFileOutput();
15:     }
16: 
17:     // learn BufferedReader,FileReader
18:     public static String bufferedInputRead(String filename) throws IOException {
19:         BufferedReader in = new BufferedReader(new FileReader(filename));
20:         String s;
21:         StringBuilder stringBuilder = new StringBuilder();
22:         while ((s = in.readLine()) != null) {
23:             stringBuilder.append(s + "\n");
24:         }
25:         in.close();
26:         return stringBuilder.toString();
27:     }
28: 
29: 
30:     // learn StringReader
31:     public static void memoryInputRead() throws IOException {
32:         StringReader in = new StringReader(bufferedInputRead(filepath));
33:         int c;
34:         while ((c = in.read()) != -1) {
35:             System.out.println((char)c);
36:         }
37: 
38:     }
39: 
40:     // learn DataInputStream,ByteArrayInputStream
41:     public static void formattedMemoryInputRead() throws IOException {
42:         DataInputStream in = new DataInputStream(new ByteArrayInputStream("abc".getBytes()));
43: //        while (true)
44: //            System.out.println((char)in.readByte());
45:         while (in.available() != 0)
46:             System.out.println((char)in.readByte());
47: 
48:     }
49: 
50:     public static void BasicFileOutput() throws IOException {
51:         BufferedReader in = new BufferedReader(new StringReader(bufferedInputRead(filepath)));
52:         PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("a.out")));
53:         int lineCount = 1;
54:         String s;
55:         while ((s = in.readLine()) != null) {
56:             out.println(lineCount++ + ": " + s);
57:         }
58: 
59:         out.close();
60: 
61: //        System.out.println(bufferedInputRead("a.out"));
62:     }
63: 
64: 
65: 
66: }
